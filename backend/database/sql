CREATE DATABASE viveoutdoors;

\c viveoutdoors;

-- Creación de tablas

CREATE TABLE usuarios (
    id_usuario INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    telefono VARCHAR(15) UNIQUE NOT NULL,
    contraseña VARCHAR(15) NOT NULL,
    rol ENUM('Admin', 'Cliente') DEFAULT 'Cliente'
);

CREATE TABLE direcciones (
    id_direccion INT PRIMARY KEY AUTO_INCREMENT,
    id_usuario INT NOT NULL,
    direccion VARCHAR(255) NOT NULL,
    ciudad VARCHAR(100) NOT NULL,
    region VARCHAR(100) NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

CREATE TABLE categorias (
    id_categoria INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    sale ENUM('Activo', 'Inactivo') DEFAULT 'Inactivo'
);

CREATE TABLE productos (
    id_producto INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    descripción TEXT,
    stock INT NOT NULL,
    precio INT NOT NULL,
);

CREATE TABLE productos_categorias (
    id_producto INT NOT NULL,
    id_categoria INT NOT NULL,
    -- valor_sale DECIMAL(10, 2),
    PRIMARY KEY (id_producto, id_categoria),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto),
    FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria)
);

CREATE TABLE imagenes_productos (
    id_imagen INT PRIMARY KEY AUTO_INCREMENT,
    id_producto INT NOT NULL,
    url VARCHAR(255) NOT NULL,
    texto_alternativo VARCHAR(255) NOT NULL,
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

CREATE TABLE pedidos (
    id_pedido INT PRIMARY KEY AUTO_INCREMENT,
    id_usuario INT NOT NULL,
    fecha_pedido DATETIME NOT NULL,
    estado ENUM('pendiente', 'enviado', 'completado', 'cancelado') DEFAULT 'pendiente',
    total INT NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

CREATE TABLE detallesPedido (
    id_detalle INT PRIMARY KEY AUTO_INCREMENT,
    id_pedido INT NOT NULL,
    id_producto INT NOT NULL,
    cantidad INT NOT NULL,
    precio INT NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES pedidos(id_pedido),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

CREATE TABLE carrito (
    id_carrito INT PRIMARY KEY AUTO_INCREMENT,
    id_usuario INT NOT NULL,
    fecha_creacion DATETIME NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

CREATE TABLE detallesCarrito (
    id_detalle_carrito INT PRIMARY KEY AUTO_INCREMENT,
    id_carrito INT NOT NULL,
    id_producto INT NOT NULL,
    cantidad INT NOT NULL,
    precio INT NOT NULL,
    FOREIGN KEY (id_carrito) REFERENCES carrito(id_carrito),
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto)
);

CREATE TABLE publicaciones (
    id_publicacion INT PRIMARY KEY AUTO_INCREMENT,
    id_producto INT NOT NULL,
    id_usuario INT NOT NULL,
    estado ENUM('Activo', 'Inactivo') NOT NULL,
    fecha_creacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_producto) REFERENCES productos(id_producto),
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)

);


--insertar registros a las tablas


--usuarios 2 admin y 1 cliente

INSERT INTO usuarios (id_usuario, nombre, apellido, email, telefono, password, rol) VALUES (DEFAULT, 'juan', 'perez', 'admin1@example.com', '1234567890', '12345', 'Admin');
INSERT INTO usuarios (id_usuario, nombre, apellido, email, telefono, password, rol) VALUES (DEFAULT, 'ana', 'gomez', 'admin2@example.com', '0987654321', '12345', 'Admin'),
INSERT INTO usuarios (id_usuario, nombre, apellido, email, telefono, password, rol) VALUES (DEFAULT, 'maria', 'lopez', 'cliente1@example.com', '1122334455', '1111', 'Cliente');

--tabla direcciones 2 registros para el cliente y 1 para cada admin

-- direcciones del admin 1
INSERT INTO direcciones (id_direccion, id_usuario, direccion, ciudad, region) VALUES (DEFAULT, 1, 'Calle Admin1', 'Santiago', 'Metropolitana');

-- direcciones del admin 2
INSERT INTO direcciones (id_direccion, id_usuario, direccion, ciudad, region) VALUES (DEFAULT, 2, 'Calle Admin2', 'Santiago', 'Metropolitana');

-- direcciones del cliente:
INSERT INTO direcciones (id_direccion, id_usuario, direccion, ciudad, region) VALUES (DEFAULT, 3, 'Calle 123', 'Santiago', 'Metropolitana'), (DEFAULT, 3, 'Avenida 456', 'Casablanca', 'Valparaíso');

